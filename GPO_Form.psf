<File version="3.1">
  <FileID>59bc60d2-108e-4d01-b0f3-f050ac627e7d</FileID>
  <Preview>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
1Gl3+2Cm3e2x0/5ljTftX9Z40/7njjftbo+d9i9rvGn/ssab9j93vGl3e+y0f1njTfuXNd60/7nj
TbvbY6f9yxpv2r+sQ512tw9m2t0eO+1f1njT/mWNN+1/7njT7vbYaf+yxpv2L2u8af9zx5t2t8dO
+5c1cnrXzh3qW7HZ66tH9t2HpQDoXLFdxbUdevbZZ/THF1/Uo48+qjvuuEN//OMf9dJLL+nBBx/U
3Xff7d12ue+++3T//ffvnb7rrrv00EMPebfdc26//XbvP7Bw0y/a8m699Vbv71m7x5599lndcsst
mjFjhjft/nXT7n43/eSTT+q2227znuee75bjludvi1uPW5+77eLa4drjn3btdO11t91z3Otwr8dN
u2W6Zfvb8txzz41qyzPPPDOqLU899ZTX9hdeeMF7vmvLyLY9/PDDo9rywAMPjGrLvffe693nbrvl
3XnnnXrkkUe8aX9bpk2b5j32/PPPe+uePn26N+3fTv62uPvdtJvPTbvnjWyLW65bvnvMTbv13nPP
Pd5tF9cuf1tcXLtd+91tf1v875l7ve51u9c/si1u+7hp/3vmtp+bdttzZFvYf47N/ce15UjtPyPf
s4m0/zz99NOjthP7z+j9x/+eHQv7j3uv3PQnuf+Mfc8O9/7jttnY/ecPf/iDbffnVFjVqq6VO0b3
3YejAOhbu0eJ2WU65ZSTvT9Z+B//8R/6xje+4f35SZdTTjnF+5vU/mn35yld/NNuXjePf/rEE0/U
t771rVHTp556qnfbLf+EE07Qt7/9bW/a/eum3f1u2s3n5vc/1y1n5LRbz8i2jW2La+fItrh53evx
Tx+oLd/5zndGtcXd7+b3T4/XlpNPPvljbXH3+acDtcW/nfbXFvevmx67nca2Zex75tY79j0b25b9
vWduHW7a3xZ/2/bXlrHvGfvPsbn/HKgtU3X/GfueHQv7z8G+Z2Pbwv4TuC1uPRN5/3HTrm+OTS/S
kiNxEWDP6l3KKWvU+eef5zXAbUDXcN+KT/FujzftnrO/abdR9jft/nXT/sfc9Mhljzftbo837V9X
oOlAbfPfdvcfStvc7fGmR65r7DRtCTwdqC3+affvobRl7LS7Pd60f12BpgO1zX/b3X8obXO3x5se
ua6x07Ql8HSgtvin3b+H0pax0+72eNP+dQWaDtQ2/213/6G0zd0eb3rkusZOH+tt8U+7fydqW8ZO
u9vjTbt/v/61ryk6teDIFADdq3aqoKpVV199lbcy94IIIYQQ8snGFQHfOPFExaQVHrkCIK+iWVdc
cTkFACGEEHKM5IgXAO4agOTcCn17eGWBGkEIIYSQo5ujcgYgt7xJl1xyMWcACCGEkGMkR6UA4BoA
Qggh5NjKUTsDcOmll1AAEEIIIcdIuAaAEEIImYI5KmcA+BUAIYQQcmyFawAIIYSQKZgjXgD4/xLg
hRdcQAFACCGEHCM54gVA75rdSsmr1H9+5ztcA0AIIYQcIzkqXwHkV7bol7+8kjMAhBBCyDESrgEg
hBBCpmCOyjUAWSX1OufnP9/7vxsRQggh5JPNUbkGIDW/St89zfd/KQdqBCGEEEKObo7aVwBXXfVL
vgIghBBCjpFwDQAhhBAyBXNUrgHIKKrVT378Y74CIIQQQo6RHJVrANIKqnXGGd+nACCEEEKOkfAV
ACGEEDIFQwFACCGETMEcta8AzvzBD/gKgBBCCDlGclQKAHcR4Fk/+hEFACGEEHKMhK8ACCGEkCkY
CgBCCCFkCuaofAXg/hTw9773Xb4CIIQQQo6RHPECwP0hoMziOp39s595ZwDcCgkhhBDyycYNyk88
4YQj+xVAfmWLLrv0En31+ON1wglfJ4QQQsgnnK9//Wv68r/9m6JS8tW/XqP67sNSALQPbVZ990ol
ZpUoPCFL4YnZhBBCCDkGEhqfqaq2QXUs2zKq7z4sBUDr0g1qsyLAXQvgKoz+dR8RQggh5JPOehd5
nX/LwIZRffdhKgAIIYQQMpFCAUAIIYRMwVAAEEIIIVMwh1wADCxbq77VO70nEkIIIWRiptf68sEV
Gw6uAPiv/7p2Y3ffkIZWbvSqBkIIIYRMzLjOv7d/ha6//tfbhrv5/bv00kt7brzxxvVWLVhuIIQQ
QsiEzY3rb7zxpvWXXXZZ/3A3DwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADARHLccf8freqvPbW22bsA
AAAASUVORK5CYII=</Preview>
  <Form>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
wnGe49oAAA==</Form>
  <Code><![CDATA[$global:counter = 0
$global:gpoCount = ((get-gpo -all -Domain $domainName).DisplayName).Count
$progressbar1.Maximum = $gpoCount
$progressbar1.Minimum = 0
$progressbar1.Step = 1
#Variable that tells the loop to exit
$script:buttonCancelLoop = $false

$formWSUGroupPolicyReport_Load={
	#TODO: Initialize Form Controls here
	
}

function Update-ComboBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ComboBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ComboBox control.
	
	.PARAMETER ComboBox
		The ComboBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ComboBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
		
	.PARAMETER ValueMember
		Indicates the property to use for the value of the control.
	
	.PARAMETER Append
		Adds the item(s) to the ComboBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ComboBox $combobox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ComboBox $combobox1 "Red" -Append
		Update-ComboBox $combobox1 "White" -Append
		Update-ComboBox $combobox1 "Blue" -Append
	
	.EXAMPLE
		Update-ComboBox $combobox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ComboBox]
		$ComboBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[Parameter(Mandatory = $false)]
		[string]$ValueMember,
		[switch]
		$Append
	)
	
	if (-not $Append)
	{
		$ComboBox.Items.Clear()
	}
	
	if ($Items -is [Object[]])
	{
		$ComboBox.Items.AddRange($Items)
	}
	elseif ($Items -is [System.Collections.IEnumerable])
	{
		$ComboBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$ComboBox.Items.Add($obj)
		}
		$ComboBox.EndUpdate()
	}
	else
	{
		$ComboBox.Items.Add($Items)
	}
	
	$ComboBox.DisplayMember = $DisplayMember
	$ComboBox.ValueMember = $ValueMember
}
#endregion

$combobox1_SelectedIndexChanged={
	#TODO: Place custom script here
}

# update function to add new items to the dropdown list
Update-ComboBox $combobox1 "GPO - All Display Name", "GPO - Creation Time", "GPO - Id", "GPO - Modification Time", "GPO Status - User Settings Disabled",
				"GPO Status - Computer Settings Disabled", "GPO Status - All Settings Enabled", "GPO Status - All Settings Disabled", "GPO - Computer Enabled", "GPO - User Enabled", "GPO - Computer Settings",
				"GPO - User Settings", "GPO - Links To"

$runReport_Click = {
	#TODO: Place custom script here
	$domainName = $env:USERDNSDOMAIN # gets the domain name
	if ($combobox1.SelectedItem.ToString() -eq "GPO - All Display Name") # displays all exisiting gpo display name 
	{
		$statusstrip1.Show()
		$toolstripstatuslabel1.Text = 'processing...'
		(get-gpo -all -Domain $domainName) | Sort-Object -Property @{ Expression = { $_.DisplayName }; Descending = $false } | Select-Object -Property @{
			label = "Display Name"; Expression = { $_.DisplayName }
		} | Out-GridView -Title "Display name of the Group Policy object (GPO)"
		$statusstrip1.Hide()
	}
	elseif ($combobox1.SelectedItem.ToString() -eq "GPO - Creation Time") # displays the gpo name, creation time - sorts list by latest creation date/time
	{
		$statusstrip1.Show()
		$toolstripstatuslabel1.Text = 'processing...'
		(get-gpo -all -Domain $domainName) | Sort-Object -Property @{ Expression = { $_.CreationTime }; Descending = $true } | Select-Object -Property @{
			label = "Display Name"; Expression = { $_.DisplayName }
		}, @{
			label = "Creation Time"; Expression = { $_.CreationTime }
		} | Out-GridView -Title "Time at which the Group Policy object (GPO) was created"
		$statusstrip1.Hide()
	}
	elseif ($combobox1.SelectedItem.ToString() -eq "GPO - Id") # displays the gpo name,guid - alphabetically with respect to display name
	{
		$statusstrip1.Show()
		$toolstripstatuslabel1.Text = 'processing...'
		(get-gpo -all -Domain $domainName) | Sort-Object -Property @{ Expression = { $_.DisplayName }; Descending = $false } | Select-Object -Property @{
			label = "Display Name"; Expression = { $_.DisplayName }
		}, @{ label = "Id"; Expression = { $_.Id } } | Out-GridView -Title "ID of the Group Policy object (GPO)"
		$statusstrip1.Hide()
	}
	elseif ($combobox1.SelectedItem.ToString() -eq "GPO - Modification Time") # displays the gpo name, modification time - sorts list by latest modified date/time
	{
		$statusstrip1.Show()
		$toolstripstatuslabel1.Text = 'processing...'
		(get-gpo -all -Domain $domainName) | Sort-Object -Property @{ Expression = { $_.ModificationTime }; Descending = $true } | Select-Object -Property @{
			label = "Display Name"; Expression = { $_.DisplayName }
		}, @{
			label = "Modification Time"; Expression = { $_.ModificationTime }
		} | Out-GridView -Title "ID of the Group Policy object (GPO)"
		$statusstrip1.Hide()
		
	}
	elseif ($combobox1.SelectedItem.ToString() -eq "GPO Status - User Settings Disabled") # displays all the user settings disabled gpo name 
	{
		$statusstrip1.Show()
		$toolstripstatuslabel1.Text = 'processing...'
		(get-gpo -all -domain $domainName) | Sort-Object -Property @{ Expression = { $_.DisplayName }; Descending = $false } | Where-object { $_.GpoStatus -Match "UserSettingsDisabled" } |
		select displayName, gpostatus | Out-GridView -Title "UserSettingsDisabled - GPO Name"
		$statusstrip1.Hide()
	}
	elseif ($combobox1.SelectedItem.ToString() -eq "GPO Status - Computer Settings Disabled") # displays all the computer settings disabled gpo name 
	{
		$statusstrip1.Show()
		$toolstripstatuslabel1.Text = 'processing...'
		(get-gpo -all -domain $domainName) | Sort-Object -Property @{ Expression = { $_.DisplayName }; Descending = $false } | Where-object { $_.GpoStatus -Match "ComputerSettingsDisabled" } |
		select displayName, gpostatus | Out-GridView -Title "Computer Settings Disabled - GPO Name"
		$statusstrip1.Hide()
	}
	elseif ($combobox1.SelectedItem.ToString() -eq "GPO Status - All Settings Enabled") # displays all setting enabled gpo name 
	{
		$statusstrip1.Show()
		$toolstripstatuslabel1.Text = 'processing...'
		(get-gpo -all -domain $domainName) | Sort-Object -Property @{ Expression = { $_.DisplayName }; Descending = $false } | Where-object { $_.GpoStatus -Match "AllSettingsEnabled" } |
		select displayName, gpostatus |
		Out-GridView -Title "All Settings Enabled - GPO Name"
		$statusstrip1.Hide()
	}
	elseif ($combobox1.SelectedItem.ToString() -eq "GPO Status - All Settings Disabled") # displays all the computer settings disabled gpo name 
	{
		$statusstrip1.Show()
		$toolstripstatuslabel1.Text = 'processing...'
		(get-gpo -all -domain $domainName) | Sort-Object -Property @{ Expression = { $_.DisplayName }; Descending = $false } | Where-object { $_.GpoStatus -Match "AllSettingsDisabled" } |
		select displayName, gpostatus | Out-GridView -Title "All Settings Disabled - GPO Name"
		$statusstrip1.Hide()
	}
	elseif ($combobox1.SelectedItem.ToString() -eq "GPO - Computer Enabled") # displays all gpo name side by its computer enabled value(true or false)
	{
		$statusstrip1.Show()
		$toolstripstatuslabel1.Text = 'processing...'
		(get-gpo -all -Domain $domainName) | Sort-Object -Property @{ Expression = { $_.DisplayName }; Descending = $false } | Select-Object -Property @{
			label = "Display Name"; Expression = { $_.DisplayName }
		}, @{ label = "Enabled"; Expression = { ($_.Computer).Enabled } } | Out-GridView -Title "Computer Enabled - GPO Name"
		$statusstrip1.Hide()
	}
	elseif ($combobox1.SelectedItem.ToString() -eq "GPO - User Enabled") # displays all gpo name side by its user enabled value(true or false)
	{
		$statusstrip1.Show()
		$toolstripstatuslabel1.Text = 'processing...'
		(get-gpo -all -Domain $domainName) | Sort-Object -Property @{ Expression = { $_.DisplayName }; Descending = $false } | Select-Object -Property @{
			label = "Display Name"; Expression = { $_.DisplayName }
		}, @{ label = "Enabled"; Expression = { ($_.User).Enabled } } | Out-GridView -Title "User Enabled - GPO Name"
		$statusstrip1.Hide()
	}
	elseif ($combobox1.SelectedItem.ToString() -eq "GPO - Computer Settings") # displays all gpo name side by its computer settings status as Modified or NeverModified
	{
		function Get-ComputerSettings
		{
			$statusstrip1.Show()
			$toolstripstatuslabel1.Text = 'processing...'
			ForEach ($GPO in (Get-GPO -All -Domain $DomainName)) {
				if ($GPO.Computer.DSVersion -eq 0 -and $GPO.Computer.SysvolVersion -eq 0) # gpo.computer DSVersion/SysvolVersion properties
				{
					$computerSettings = "Never Modified"
				}
				else
				{
					$computerSettings = "Modified"
				}
				# output
				New-Object -TypeName PSObject -Property @{
					'Display Name' = $GPO.DisplayName
					'Computer Settings' = $ComputerSettings
				}
			}
		}
		$computerSettingsRes = Get-ComputerSettings
		$computerSettingsRes | Out-Gridview -Title "Computer Settings - GPO"
		$statusstrip1.Hide()
	}
	elseif ($combobox1.SelectedItem.ToString() -eq "GPO - User Settings") # displays all gpo name side by its user settings status as Modified or NeverModified
	{
		function Get-UserSettings
		{
			$statusstrip1.Show()
			
			ForEach ($GPO in (Get-GPO -All -Domain $DomainName)) {
				if ($GPO.User.DSVersion -eq 0 -and $GPO.User.SysvolVersion -eq 0) # gpo.user DSVersion/SysvolVersion properties
				{
					$UserSettings = "Never Modified"
				}
				else
				{
					$UserSettings = "Modified"
				}
				# output
				New-Object -TypeName PSObject -Property @{
					'Display Name' = $GPO.DisplayName
					'User Settings' = $UserSettings
				}
			}
		}
		$toolstripstatuslabel1.Text = 'processing...'
		$userSettingsRes = Get-UserSettings
		$userSettingsRes | Out-Gridview -Title "User Settings - GPO"
		$statusstrip1.Hide()
	}
	
	elseif ($combobox1.SelectedItem.ToString() -eq "GPO - Links To") # displays all gpo name side by its OrgUnit 
	{
		#Init CancelLoop
		$script:buttonCancelLoop = $false
		$buttonCancelLoop.Enabled = $true
		#Disable the run report button so we don't trigger it again
		$runReport.Enabled = $false
		$buttonCancelLoop.Show()
		$buttonCancelLoop.Enabled = $true
		function Get-LinksTo
		{
			$statusstrip1.Show()
			$progressbar1.Show()
			ForEach ($GPO in (Get-GPO -All -Domain $DomainName))
			{
				#process the pending message
				[System.Windows.Forms.Application]::DoEvents()
				
				if ($script:buttonCancelLoop -eq $true)
				{
					#Clear the progress bar
					$progressbar1.Value = 0
					#Exit the loop
					break;
				}
				$counter = $counter + 1
				if ($counter % 2 -eq 0) # changing the statusbar back and forth to notify the user
				{
					$toolstripstatuslabel1.Text = 'processing...( ' + $counter + ' of ' + $gpoCount + ' )'
					$progressbar1.PerformStep()
				}
				else
				{
					$toolstripstatuslabel1.Text = 'collecting paths. please wait...( ' + $counter + ' of ' + $gpoCount + ' )'
					$progressbar1.PerformStep()
				}
				
				[xml]$XmlGPReport = $GPO.generatereport('xml')
				New-Object -TypeName PSObject -Property @{
					'Display Name' = $GPO.DisplayName
					'Links To'	   = $XmlGPReport.GPO.LinksTo | Select-Object -ExpandProperty SOMPath
				}
			}
			$runReport.Enabled = $true
			$buttonCancelLoop.Enabled = $false
			$buttonCancelLoop.Hide()
		}
		$linksRes = Get-LinksTo
		$linksRes | Out-Gridview -Title "GPO - LinksTo"
		$statusstrip1.Hide()
		$progressbar1.Hide()
		$progressbar1.Value = 0 # reset the progress bar 
	}
}

$buttonExit_Click = {
	#The Exit Button has DialogResult = Cancel
	#So we don't have to call $form1.Close method
	#But the Closing event will not trigger until
	#the loop is finished processing
	#So we just tell the loop to stop
	$formWSUGroupPolicyReport.Close()
}

$buttonCancelLoop_Click = {
	$script:buttonCancelLoop = $true
}
	<#
	
	Additional Requirement:  
	[HasComputer Settings, HasUserSettings] T/F Value ??
	
	#>
]]></Code>
  <Mode>1</Mode>
  <Assemblies />
</File>